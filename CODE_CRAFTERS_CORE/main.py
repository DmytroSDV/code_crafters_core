from CODE_CRAFTERS_CORE.AddressBook import *
from CODE_CRAFTERS_CORE.NoteFeature import *
from CODE_CRAFTERS_CORE.FileSorting import executing_command
from CODE_CRAFTERS_CORE.RecordData import bcolors
from pathlib import Path
from prompt_toolkit import prompt
from prompt_toolkit.completion import WordCompleter
from prompt_toolkit.application.current import get_app
import random
import threading
from prompt_toolkit.styles import Style


COLOR_COMMAND_GREEN = 'bg:#ansigreen #ffffff'
STYLE = Style.from_dict({"prompt": COLOR_COMMAND_GREEN})

    
HI_COMMANDS = [
    "üé©‚ú®Abracadabra! Enter the magic team:",
    "Let me know what you want to do: ",
    "Waiting for your team to start work: ",
    "Welcome to the amazing world of opportunities! Waiting for your team to start.",
    "Welcome to the world of opportunities! Waiting for your magic team.",
]


COMMAND_EXPLAIN = WordCompleter(
    [
        "cli",
        "contact-add",
        "contact-find",
        "contact-show-all",
        "contact-phone-add",
        "contact-phone-remove",
        "contact-email-add",
        "contact-email-remove",
        "contact-phone-edit",
        "contact-email-edit",
        "contact-birthday-edit",
        "contact-remove",
        "display-birthdays",
        "note-add",
        "note-find",
        "note-show-all",
        "note-edit",
        "note-remove",
        "tag-add",
        "tag-edit",
        "tag-remove",
        "tag-find-sort",
        "file-sort",
        "file-extension-add",
        "file-extension-remove",
        "quit",
        "exit",
        "q",
    ]
)


def pre_run():
    app = get_app()
    b = app.current_buffer
    if b.complete_state:
        b.complete_next()
    else:
        b.start_completion(select_first=False)


def available_commands():
    command_list = [
        "cli",
        "contact-add",
        "contact-find",
        "contact-show-all",
        "contact-phone-add",
        "contact-phone-remove",
        "contact-email-add",
        "contact-email-remove",
        "contact-phone-edit",
        "contact-email-edit",
        "contact-birthday-edit",
        "contact-remove",
        "display-birthdays",
        "note-add",
        "note-find",
        "note-show-all",
        "note-edit",
        "note-remove",
        "tag-add",
        "tag-edit",
        "tag-remove",
        "tag-find-sort",
        "file-sort",
        "file-extension-add",
        "file-extension-remove",
        "quit",
        "exit",
        "q",
    ]

    command_explain = [
        "–≤–∏–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–º–∞–Ω–¥",
        "–∑–±–µ—Ä—ñ–≥–∞—î –∫–æ–Ω—Ç–∞–∫—Ç –∑ —ñ–º–µ–Ω–µ–º, –∞–¥—Ä–µ—Å–æ–º, –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞, email —Ç–∞ –¥–Ω–µ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –¥–æ –∫–Ω–∏–≥–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤",
        "–∑–¥—ñ–π—Å–Ω—é—î –ø–æ—à—É–∫ –∫–æ–Ω—Ç–∞–∫—Ç—É —Å–µ—Ä–µ–¥ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –∫–Ω–∏–≥–∏",
        "–ø–æ–∫–∞–∑—É—î –≤—Å—ñ —ñ—Å–Ω—É—é—á—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏ –≤ –∫–Ω–∏–∑—ñ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤",
        "–¥–æ–¥–∞—Ç–∏ —ñ—â–µ 1-–∏–Ω phone –¥–æ —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É",
        "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ phone",
        "–¥–æ–¥–∞—Ç–∏ —ñ—â–µ 1-–∏–Ω email –¥–æ —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É",
        "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ email",
        "—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è phone —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É",
        "—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è email —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É",
        "—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è birthday —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É",
        "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É",
        "–≤–∏–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤, —É —è–∫–∏—Ö –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤ –≤—ñ–¥ –ø–æ—Ç–æ—á–Ω–æ—ó –¥–∞—Ç–∏",
        "–∑–±–µ—Ä—ñ–≥–∞—î –Ω–æ—Ç–∞—Ç–∫—É –∑–∞ —ñ–º–µ–Ω–µ–º –∞–≤—Ç–æ—Ä–∞",
        "–∑–¥—ñ–π—Å–Ω—é—î –ø–æ—à—É–∫ –Ω–æ—Ç–∞—Ç–∫–∏ —Å–µ—Ä–µ–¥ —ñ—Å–Ω—É—é—á–∏—Ö –Ω–æ—Ç–∞—Ç–∫—ñ–≤",
        "–ø–æ–∫–∞–∑—É—î –≤—Å—ñ —ñ—Å–Ω—É—é—á—ñ –Ω–æ—Ç–∞—Ç–∫–∏",
        "—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏",
        "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏",
        "–¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–µ–≥—ñ–≤ –¥–æ —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏",
        "—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ç–µ–≥—ñ–≤ —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏",
        "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–µ–≥—ñ–≤ –∑ —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏",
        "–ø–æ—à—É–∫ —Ç–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –Ω–æ—Ç–∞—Ç–æ–∫ –∑–∞ —Ç–µ–≥–∞–º–∏",
        "—Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ —É –∑–∞–∑–Ω–∞—á–µ–Ω—ñ–π –ø–∞–ø—Ü—ñ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏ (–∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, –¥–æ–∫—É–º–µ–Ω—Ç–∏, –≤—ñ–¥–µ–æ —Ç–∞ —ñ–Ω.).",
        "–¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è",
        "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è —ñ–∑ —Å–ø–∏—Å–∫—É –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è",
        "–≤–∏—Ö—ñ–¥ –∑ –ø—Ä–æ–≥—Ä–∞–º–∏",
        "–≤–∏—Ö—ñ–¥ –∑ –ø—Ä–æ–≥—Ä–∞–º–∏",
        "–≤–∏—Ö—ñ–¥ –∑ –ø—Ä–æ–≥—Ä–∞–º–∏",
    ]

    return "".join(
        "|{:<10} - {:<20}|\n".format(command_list[item], command_explain[item])
        for item in range(len(command_list))
    )


def get_input():
    from_user = prompt(
        random.choice(HI_COMMANDS),
        completer=COMMAND_EXPLAIN,
        pre_run=pre_run,
        style=STYLE,
    )
    return from_user


def wait_for_input(timeout=60):
    result = None
    event = threading.Event()

    def input_thread():
        nonlocal result
        result = get_input()
        event.set()

    thread = threading.Thread(target=input_thread, daemon=True)
    thread.start()

    # –°–æ–∑–¥–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
    timer = threading.Timer(timeout, event.set)
    timer.start()

    # –ñ–¥–µ–º –≤–≤–æ–¥–∞ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
    thread.join(timeout=timeout)

    # –û—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∫–æ–º–∞–Ω–¥—É
    timer.cancel()

    if thread.is_alive():
        print("\n‚è∞ You are here, I'm waiting for your command")

    return result


def main():
    file_name = "database.bin"
    note_name = "notebase.bin"
    file_database = Path(file_name)
    note_database = Path(note_name)

    # Deserialization adddressbook
    if file_database.exists() and file_database.is_file():
        with open(file_database, "rb") as fh:
            check_content = fh.read()

        if not check_content:
            book = AddressBook()
        else:
            deserialization = AddressBook()
            book = deserialization.read_from_file(file_name)
    else:
        with open(file_database, "wb") as fh:
            pass
        book = AddressBook()

    # Deserialization notebook
    if note_database.exists() and note_database.is_file():
        with open(note_database, "rb") as fh:
            check_content = fh.read()
        if not check_content:
            note = NoteBook()
        else:
            deserialization = NoteBook()
            note = deserialization.note_read_from_file(note_name)
    else:
        with open(note_database, "wb") as fh:
            pass
        note = NoteBook()


    print("Hello! My name is Bot Jul. How can I help you today?")

    try:
        while 1:
            user_input = wait_for_input()

            match user_input:
                case "cli":
                    print(available_commands())

                case "contact-add":
                    # '–∑–±–µ—Ä—ñ–≥–∞—î –∫–æ–Ω—Ç–∞–∫—Ç –∑ —ñ–º–µ–Ω–µ–º, –∞–¥—Ä–µ—Å–æ–º, –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞, email —Ç–∞ –¥–Ω–µ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –¥–æ –∫–Ω–∏–≥–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤'
                    book.add_contacts()

                case "contact-find":
                    # '–∑–¥—ñ–π—Å–Ω—é—î –ø–æ—à—É–∫ –∫–æ–Ω—Ç–∞–∫—Ç—É —Å–µ—Ä–µ–¥ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –∫–Ω–∏–≥–∏'
                    book.search_contact()

                case "contact-show-all":
                    # "–ø–æ–∫–∞–∑—É—î –≤—Å—ñ —ñ—Å–Ω—É—é—á—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏ –≤ –∫–Ω–∏–∑—ñ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤"
                    book.show_all_contacts()

                case "contact-phone-add":
                    # "–¥–æ–¥–∞—Ç–∏ —ñ—â–µ 1-–∏–Ω phone –¥–æ —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É"
                    book.add_phone()

                case "contact-phone-remove":
                    # "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ phone",
                    book.remove_phone()

                case "contact-email-add":
                    # "–¥–æ–¥–∞—Ç–∏ —ñ—â–µ 1-–∏–Ω email –¥–æ —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É"
                    book.add_email()

                case "contact-email-remove":
                    # "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ email",
                    book.remove_email()

                case "contact-phone-edit":
                    # "—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è phone —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É"
                    book.edit_phone()

                case "contact-email-edit":
                    # '—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è email —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É'
                    book.edit_email()

                case "contact-birthday-edit":
                    # '—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è birthday —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É'
                    book.edit_birthday()

                case "contact-remove":
                    # "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É"
                    book.del_contact()

                case "display-birthdays":
                    # "–≤–∏–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤, —É —è–∫–∏—Ö –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤ –≤—ñ–¥ –ø–æ—Ç–æ—á–Ω–æ—ó –¥–∞—Ç–∏"
                    book.show_contacts_birthdays()

                case "note-add":
                    # "–∑–±–µ—Ä—ñ–≥–∞—î –Ω–æ—Ç–∞—Ç–∫—É –∑–∞ —ñ–º–µ–Ω–µ–º –∞–≤—Ç–æ—Ä–∞",
                    note.add_new_note()

                case "note-find":
                    # "–∑–¥—ñ–π—Å–Ω—é—î –ø–æ—à—É–∫ –Ω–æ—Ç–∞—Ç–∫–∏ —Å–µ—Ä–µ–¥ —ñ—Å–Ω—É—é—á–∏—Ö –Ω–æ—Ç–∞—Ç–∫—ñ–≤"
                    note.find_author()

                case "note-show-all":
                    # "–ø–æ–∫–∞–∑—É—î –≤—Å—ñ —ñ—Å–Ω—É—é—á—ñ –Ω–æ—Ç–∞—Ç–∫–∏"
                    note.note_show_all()

                case "note-edit":
                    # "—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏"
                    note.note_edit()

                case "note-remove":
                    # "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏"
                    note.note_remove()

                case "tag-add":
                    #  "–¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–µ–≥—ñ–≤ –¥–æ —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏"
                    note.tag_add()

                case "tag-edit":
                    #  "—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ç–µ–≥—ñ–≤ —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏"
                    note.tag_edit()

                case "tag-remove":
                    #  "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–µ–≥—ñ–≤ –∑ —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏"
                    note.tag_remove()

                case "tag-find-sort":
                    #  "–ø–æ—à—É–∫ —Ç–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –Ω–æ—Ç–∞—Ç–æ–∫ –∑–∞ —Ç–µ–≥–∞–º–∏"
                    note.tag_find_and_sort()

                case "file-sort":
                    #  "—Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ —É –∑–∞–∑–Ω–∞—á–µ–Ω—ñ–π –ø–∞–ø—Ü—ñ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏ (–∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, –¥–æ–∫—É–º–µ–Ω—Ç–∏, –≤—ñ–¥–µ–æ —Ç–∞ —ñ–Ω.)."
                    executing_command(user_input.lower())

                case "file-extension-add":
                    #  "–¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è"
                    executing_command(user_input.lower())

                case "file-extension-remove":
                    #  "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è —ñ–∑ —Å–ø–∏—Å–∫—É –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è"
                    executing_command(user_input.lower())

                case "quit" | "exit" | "q":
                    print("Good bye!\n")

                    serialization = AddressBook()
                    serialization.save_to_file(file_name, book)
                    note_serialization = NoteBook()
                    note_serialization.note_save_to_file(note_name, note)
                    break

                case _:
                  error_messages = [
                    "Oh! You seem to have introduced the wrong team. Please try again!",
                    "Oops! This is not like the right team. Let's try again",
                    "Error: The team is not recognized. Try again.",
                    "üòÆ Hmm, I don't understand this team. Let's try something else."
                  ]
                  print(random.choice(error_messages))

                
    except Exception as ex:
        print("Unnexpected error!\n")

        serialization = AddressBook()
        serialization.save_to_file(file_name, book)
        note_serialization = NoteBook()
        note_serialization.note_save_to_file(note_name, note)
    
    except KeyboardInterrupt:
        print("KeyBoard interrupt error, EXITING!\n")

        serialization = AddressBook()
        serialization.save_to_file(file_name, book)
        note_serialization = NoteBook()
        note_serialization.note_save_to_file(note_name, note)




if __name__ == "__main__":
    main()
