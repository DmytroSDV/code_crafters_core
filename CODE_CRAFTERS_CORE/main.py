from CODE_CRAFTERS_CORE.AvadaKedavra import shutdown_with_countdown
from CODE_CRAFTERS_CORE.FileSorting import executing_command
from prompt_toolkit.application.current import get_app
from prompt_toolkit.completion import WordCompleter
from CODE_CRAFTERS_CORE.RecordData import bcolors
from CODE_CRAFTERS_CORE.AddressBook import *
from CODE_CRAFTERS_CORE.NoteFeature import *
from prompt_toolkit import PromptSession
from prompt_toolkit.styles import Style
from prompt_toolkit import prompt
from pathlib import Path
import threading
import asyncio
import random




messages = {
    "english": {
        "welcome": "Welcome! How can I assist you today?",
        "error": "Oops! I didn't understand that command. Please try again.",
        "commands": "Here is the list of available commands:",
        "save_contact": "Save a contact with a name, address, phone number, email, and birthday to the contacts book",
        "search_contact": "Search for a contact among the contacts in the book",
        "show_contacts": "Show all existing contacts in the contacts book",
        "add_phone": "Add another phone to an existing contact",
        "delete_phone": "Delete an existing phone",
        "add_email": "Add another email to an existing contact",
        "delete_email": "Delete an existing email",
        "edit_phone": "Edit the phone of an existing contact",
        "edit_email": "Edit the email of an existing contact",
        "edit_birthday": "Edit the birthday of an existing contact",
        "delete_contact": "Delete an existing contact",
        "upcoming_birthdays": "Display a list of contacts whose birthday is within a specified number of days from the current date",
        "save_note": "Save a note with the author's name",
        "search_note": "Search for a note among existing notes",
        "show_notes": "Show all existing notes",
        "edit_note": "Edit an existing note",
        "delete_note": "Delete an existing note",
        "add_tags": "Add tags to an existing note",
        "edit_tags": "Edit the tags of an existing note",
        "delete_tags": "Delete tags from an existing note",
        "search_sort_notes": "Search and sort notes by tags",
        "sort_files": "Sort files in the specified folder by categories (images, documents, videos, etc.)",
        "add_extension": "Add an additional extension for sorting",
        "remove_extension": "Remove an extension from the sorting list",
        "exit_program": "Exit the program",
    },
    "russian": {
        "welcome": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å–µ–≥–æ–¥–Ω—è?",
        "error": "–û–π! –Ø –Ω–µ –ø–æ–Ω—è–ª —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
        "commands": "–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:",
        "save_contact": "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç —Å –∏–º–µ–Ω–µ–º, –∞–¥—Ä–µ—Å–æ–º, –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–æ–π –∏ –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –∫–Ω–∏–≥–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤",
        "search_contact": "–ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å—Ä–µ–¥–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ –∫–Ω–∏–≥–µ",
        "show_contacts": "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ –∫–Ω–∏–≥–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤",
        "add_phone": "–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–∏–Ω —Ç–µ–ª–µ—Ñ–æ–Ω –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∫–æ–Ω—Ç–∞–∫—Ç—É",
        "delete_phone": "–£–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω",
        "add_email": "–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–∏–Ω –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∫–æ–Ω—Ç–∞–∫—Ç—É",
        "delete_email": "–£–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã",
        "edit_phone": "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞",
        "edit_email": "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞",
        "edit_birthday": "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞",
        "delete_contact": "–£–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–∞–∫—Ç",
        "upcoming_birthdays": "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤, —É –∫–æ—Ç–æ—Ä—ã—Ö –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã",
        "save_note": "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É —Å –∏–º–µ–Ω–µ–º –∞–≤—Ç–æ—Ä–∞",
        "search_note": "–ü–æ–∏—Å–∫ –∑–∞–º–µ—Ç–∫–∏ —Å—Ä–µ–¥–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–º–µ—Ç–æ–∫",
        "show_notes": "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–º–µ—Ç–∫–∏",
        "edit_note": "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–º–µ—Ç–∫—É",
        "delete_note": "–£–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–º–µ—Ç–∫—É",
        "add_tags": "–î–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥–∏ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–º–µ—Ç–∫–µ",
        "edit_tags": "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–≥–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–º–µ—Ç–∫–∏",
        "delete_tags": "–£–¥–∞–ª–∏—Ç—å —Ç–µ–≥–∏ –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–º–µ—Ç–∫–∏",
        "search_sort_notes": "–ü–æ–∏—Å–∫ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–º–µ—Ç–æ–∫ –ø–æ —Ç–µ–≥–∞–º",
        "sort_files": "–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –¥–æ–∫—É–º–µ–Ω—Ç—ã, –≤–∏–¥–µ–æ –∏ —Ç. –¥.)",
        "add_extension": "–î–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏",
        "remove_extension": "–£–¥–∞–ª–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏",
        "exit_program": "–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã",
    },
}

COLOR_COMMAND_GREEN = "bg:#ansigreen #ffffff"
STYLE = Style.from_dict({"prompt": COLOR_COMMAND_GREEN})

HI_COMMANDS_RU = [
    "üé©‚ú®–ê–±—Ä–∞–∫–∞–¥–∞–±—Ä–∞! –í–≤–µ–¥–∏—Ç–µ –≤–æ–ª—à–µ–±–Ω—É—é –∫–æ–º–∞–Ω–¥—É:",
    "–°–∫–∞–∂–∏—Ç–µ –º–Ω–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å: ",
    "–ñ–¥—É –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã: ",
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–π –º–∏—Ä –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π! –û–∂–∏–¥–∞—é –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –Ω–∞—á–∞–ª–∞.",
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π! –û–∂–∏–¥–∞—é –≤–∞—à–µ–π –≤–æ–ª—à–µ–±–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.",
]



HI_COMMANDS = [
    "üé©‚ú®Abracadabra! Enter the magic command:",
    "Let me know what you want to do: ",
    "Waiting for your command to start work: ",
    "Welcome to the amazing world of opportunities! Waiting for your command to start.",
    "Welcome to the world of opportunities! Waiting for your magic command.",
]


COMMAND_EXPLAIN_RU = WordCompleter(
    [
        "–ö–æ–º–∞–Ω–¥—ã",
        "–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞",  # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞
        "–ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞",  # –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞
        "–ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã",  # –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
        "–¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –∫ –∫–æ–Ω—Ç–∞–∫—Ç—É",  # –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –∫ –∫–æ–Ω—Ç–∞–∫—Ç—É
        "—É–¥–∞–ª–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω —É –∫–æ–Ω—Ç–∞–∫—Ç–∞",  # —É–¥–∞–ª–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω —É –∫–æ–Ω—Ç–∞–∫—Ç–∞
        "–¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É –∫ –∫–æ–Ω—Ç–∞–∫—Ç—É",  # –¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É –∫ –∫–æ–Ω—Ç–∞–∫—Ç—É
        "—É–¥–∞–ª–∏—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É —É –∫–æ–Ω—Ç–∞–∫—Ç–∞",  # —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É —É –∫–æ–Ω—Ç–∞–∫—Ç–∞
        "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –∫–æ–Ω—Ç–∞–∫—Ç–∞",  # —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –∫–æ–Ω—Ç–∞–∫—Ç–∞
        "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É –∫–æ–Ω—Ç–∞–∫—Ç–∞",  # —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É –∫–æ–Ω—Ç–∞–∫—Ç–∞
        "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞",  # —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
        "—É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç",  # —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç
        "–ø–æ–∫–∞–∑–∞—Ç—å –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è",  # –ø–æ–∫–∞–∑–∞—Ç—å –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è
        "–¥–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É",  # –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É
        "–Ω–∞–π—Ç–∏ –∑–∞–º–µ—Ç–∫—É",  # –Ω–∞–π—Ç–∏ –∑–∞–º–µ—Ç–∫—É
        "–ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏",  # –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏
        "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–º–µ—Ç–∫—É",  # —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–º–µ—Ç–∫—É
        "—É–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É",  # —É–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É
        "–¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥",  # –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥
        "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–≥",  # —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–≥
        "—É–¥–∞–ª–∏—Ç—å —Ç–µ–≥",  # —É–¥–∞–ª–∏—Ç—å —Ç–µ–≥
        "–Ω–∞–π—Ç–∏ –∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ–≥–∞–º",  # –Ω–∞–π—Ç–∏ –∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ–≥–∞–º
        "—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã",  # —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã
        "–¥–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏",  # –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
        "—É–¥–∞–ª–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏",  # —É–¥–∞–ª–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
        "–≤—ã—Ö–æ–¥",  # –≤—ã—Ö–æ–¥
    ]
)


COMMAND_EXPLAIN = WordCompleter(
    [
        "cli",
        "contact-add",
        "contact-find",
        "contact-show-all",
        "contact-phone-add",
        "contact-phone-remove",
        "contact-email-add",
        "contact-email-remove",
        "contact-phone-edit",
        "contact-email-edit",
        "contact-birthday-edit",
        "contact-remove",
        "display-birthdays",
        "note-add",
        "note-find",
        "note-show-all",
        "note-edit",
        "note-remove",
        "tag-add",
        "tag-edit",
        "tag-remove",
        "tag-find-sort",
        "file-sort",
        "file-extension-add",
        "file-extension-remove",
        "quit",
        "exit",
        "q",
    ]
)


def pre_run():
    app = get_app()
    b = app.current_buffer
    if b.complete_state:
        b.complete_next()
    else:
        b.start_completion(select_first=False)


def available_commands():
    command_list = [
        bcolors.ORANGE + "cli" + bcolors.RESET,
        bcolors.ORANGE + "contact-add" + bcolors.RESET,
        bcolors.ORANGE + "contact-find" + bcolors.RESET,
        bcolors.ORANGE + "contact-show-all" + bcolors.RESET,
        bcolors.ORANGE + "contact-phone-add" + bcolors.RESET,
        bcolors.ORANGE + "contact-phone-remove" + bcolors.RESET,
        bcolors.ORANGE + "contact-email-add" + bcolors.RESET,
        bcolors.ORANGE + "contact-email-remove" + bcolors.RESET,
        bcolors.ORANGE + "contact-phone-edit" + bcolors.RESET,
        bcolors.ORANGE + "contact-email-edit" + bcolors.RESET,
        bcolors.ORANGE + "contact-birthday-edit" + bcolors.RESET,
        bcolors.ORANGE + "contact-remove" + bcolors.RESET,
        bcolors.ORANGE + "display-birthdays" + bcolors.RESET,
        bcolors.ORANGE + "note-add" + bcolors.RESET,
        bcolors.ORANGE + "note-find" + bcolors.RESET,
        bcolors.ORANGE + "note-show-all" + bcolors.RESET,
        bcolors.ORANGE + "note-edit" + bcolors.RESET,
        bcolors.ORANGE + "note-remove" + bcolors.RESET,
        bcolors.ORANGE + "tag-add" + bcolors.RESET,
        bcolors.ORANGE + "tag-edit" + bcolors.RESET,
        bcolors.ORANGE + "tag-remove" + bcolors.RESET,
        bcolors.ORANGE + "tag-find-sort" + bcolors.RESET,
        bcolors.ORANGE + "file-sort" + bcolors.RESET,
        bcolors.ORANGE + "file-extension-add" + bcolors.RESET,
        bcolors.ORANGE + "file-extension-remove" + bcolors.RESET,
        bcolors.ORANGE + "quit" + bcolors.RESET,
        bcolors.ORANGE + "exit" + bcolors.RESET,
        bcolors.ORANGE + "q" + bcolors.RESET,
    ]

    command_explain = [
        bcolors.BLUE + "–≤–∏–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–º–∞–Ω–¥" + bcolors.RESET,
        bcolors.BLUE + "–∑–±–µ—Ä—ñ–≥–∞—î –∫–æ–Ω—Ç–∞–∫—Ç –∑ —ñ–º–µ–Ω–µ–º, –∞–¥—Ä–µ—Å–æ–º, –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞, email —Ç–∞ –¥–Ω–µ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –¥–æ –∫–Ω–∏–≥–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤" + bcolors.RESET,
        bcolors.BLUE + "–∑–¥—ñ–π—Å–Ω—é—î –ø–æ—à—É–∫ –∫–æ–Ω—Ç–∞–∫—Ç—É —Å–µ—Ä–µ–¥ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –∫–Ω–∏–≥–∏" + bcolors.RESET,
        bcolors.BLUE + "–ø–æ–∫–∞–∑—É—î –≤—Å—ñ —ñ—Å–Ω—É—é—á—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏ –≤ –∫–Ω–∏–∑—ñ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤" + bcolors.RESET,
        bcolors.BLUE + "–¥–æ–¥–∞—Ç–∏ —ñ—â–µ 1-–∏–Ω phone –¥–æ —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É" + bcolors.RESET,
        bcolors.BLUE + "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ phone" + bcolors.RESET,
        bcolors.BLUE + "–¥–æ–¥–∞—Ç–∏ —ñ—â–µ 1-–∏–Ω email –¥–æ —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É" + bcolors.RESET,
        bcolors.BLUE + "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ email" + bcolors.RESET,
        bcolors.BLUE + "—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è phone —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É" + bcolors.RESET,
        bcolors.BLUE + "—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è email —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É" + bcolors.RESET,
        bcolors.BLUE + "—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è birthday —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É" + bcolors.RESET,
        bcolors.BLUE + "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É" + bcolors.RESET,
        bcolors.BLUE + "–≤–∏–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤, —É —è–∫–∏—Ö –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤ –≤—ñ–¥ –ø–æ—Ç–æ—á–Ω–æ—ó –¥–∞—Ç–∏" + bcolors.RESET,
        bcolors.BLUE + "–∑–±–µ—Ä—ñ–≥–∞—î –Ω–æ—Ç–∞—Ç–∫—É –∑–∞ —ñ–º–µ–Ω–µ–º –∞–≤—Ç–æ—Ä–∞" + bcolors.RESET,
        bcolors.BLUE + "–∑–¥—ñ–π—Å–Ω—é—î –ø–æ—à—É–∫ –Ω–æ—Ç–∞—Ç–∫–∏ —Å–µ—Ä–µ–¥ —ñ—Å–Ω—É—é—á–∏—Ö –Ω–æ—Ç–∞—Ç–∫—ñ–≤" + bcolors.RESET,
        bcolors.BLUE + "–ø–æ–∫–∞–∑—É—î –≤—Å—ñ —ñ—Å–Ω—É—é—á—ñ –Ω–æ—Ç–∞—Ç–∫–∏" + bcolors.RESET,
        bcolors.BLUE + "—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏" + bcolors.RESET,
        bcolors.BLUE + "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏" + bcolors.RESET,
        bcolors.BLUE + "–¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–µ–≥—ñ–≤ –¥–æ —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏" + bcolors.RESET,
        bcolors.BLUE + "—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ç–µ–≥—ñ–≤ —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏" + bcolors.RESET,
        bcolors.BLUE + "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–µ–≥—ñ–≤ –∑ —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏" + bcolors.RESET,
        bcolors.BLUE + "–ø–æ—à—É–∫ —Ç–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –Ω–æ—Ç–∞—Ç–æ–∫ –∑–∞ —Ç–µ–≥–∞–º–∏" + bcolors.RESET,
        bcolors.BLUE + "—Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ —É –∑–∞–∑–Ω–∞—á–µ–Ω—ñ–π –ø–∞–ø—Ü—ñ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏ (–∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, –¥–æ–∫—É–º–µ–Ω—Ç–∏, –≤—ñ–¥–µ–æ —Ç–∞ —ñ–Ω.)." + bcolors.RESET,
        bcolors.BLUE + "–¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è" + bcolors.RESET,
        bcolors.BLUE + "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è —ñ–∑ —Å–ø–∏—Å–∫—É –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è" + bcolors.RESET,
        bcolors.BLUE + "–≤–∏—Ö—ñ–¥ –∑ –ø—Ä–æ–≥—Ä–∞–º–∏" + bcolors.RESET,
        bcolors.BLUE + "–≤–∏—Ö—ñ–¥ –∑ –ø—Ä–æ–≥—Ä–∞–º–∏" + bcolors.RESET,
        bcolors.BLUE + "–≤–∏—Ö—ñ–¥ –∑ –ø—Ä–æ–≥—Ä–∞–º–∏" + bcolors.RESET,
    ]

    return "".join(
        "|{:<10} - {:<20}|\n".format(command_list[item], command_explain[item])
        for item in range(len(command_list))
    )


async def get_input():
    global exit_flag
    try:
        session = PromptSession()
        result = await session.prompt_async(
            random.choice(HI_COMMANDS),
            completer=COMMAND_EXPLAIN,
            pre_run=pre_run,
            style=STYLE,
        )
        timer_thread.cancel()
        return result
    except KeyboardInterrupt:
        print("KeyBoard interrupt error, EXITING!\n")
        serialization = AddressBook()
        serialization.save_to_file(file_name, book)
        note_serialization = NoteBook()
        note_serialization.note_save_to_file(note_name, note)
        exit_flag = True
        
    except RuntimeError:
        pass

def timer_function():
    print("\n:alarm_clock: Time's up! You didn't enter any command.")
    print("I'm offended, you're not using me, so I run the Awadakedabra command and I shut down you forever!")
    shutdown_with_countdown()


def wait_for_input(timeout=60, timeout2=300):
    loop = asyncio.get_event_loop()
    result = None
    global timer_thread

    async def wait_input():
        nonlocal result
        result = await get_input()
        

    timer_thread = threading.Timer(timeout2, timer_function)
    timer_thread.start()

    try:
        loop.run_until_complete(asyncio.wait_for(wait_input(), timeout=timeout))
    except asyncio.TimeoutError:
        print("\n:alarm_clock: You are here, I'm waiting for your command")
    
    return result


def main():
    global exit_flag
    global file_name
    global note_name
    global book
    global note
    exit_flag = False
    file_name = "database.bin"
    note_name = "notebase.bin"
    file_database = Path(file_name)
    note_database = Path(note_name)

    # Deserialization adddressbook
    if file_database.exists() and file_database.is_file():
        with open(file_database, "rb") as fh:
            check_content = fh.read()

        if not check_content:
            book = AddressBook()
        else:
            deserialization = AddressBook()
            book = deserialization.read_from_file(file_name)
    else:
        with open(file_database, "wb") as fh:
            pass
        book = AddressBook()

    # Deserialization notebook
    if note_database.exists() and note_database.is_file():
        with open(note_database, "rb") as fh:
            check_content = fh.read()
        if not check_content:
            note = NoteBook()
        else:
            deserialization = NoteBook()
            note = deserialization.note_read_from_file(note_name)
    else:
        with open(note_database, "wb") as fh:
            pass
        note = NoteBook()

    # print("Hello! My name is Bot Jul. How can I help you today?")
    # language = input("Please choose a language (english/russian): ")
    try:

        while 1:
            language = input("Please choose a language (english/russian): ")
            if language == "english":
                user_input = wait_for_input()
                print(messages[language]["welcome"])
                match user_input:
                    case "cli":
                        print(available_commands())

                    case "contact-add":
                        # '–∑–±–µ—Ä—ñ–≥–∞—î –∫–æ–Ω—Ç–∞–∫—Ç –∑ —ñ–º–µ–Ω–µ–º, –∞–¥—Ä–µ—Å–æ–º, –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞, email —Ç–∞ –¥–Ω–µ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –¥–æ –∫–Ω–∏–≥–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤'
                        book.add_contacts()

                    case "contact-find":
                        # '–∑–¥—ñ–π—Å–Ω—é—î –ø–æ—à—É–∫ –∫–æ–Ω—Ç–∞–∫—Ç—É —Å–µ—Ä–µ–¥ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –∫–Ω–∏–≥–∏'
                        book.search_contact()

                    case "contact-show-all":
                        # "–ø–æ–∫–∞–∑—É—î –≤—Å—ñ —ñ—Å–Ω—É—é—á—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏ –≤ –∫–Ω–∏–∑—ñ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤"
                        book.show_all_contacts()

                    case "contact-phone-add":
                        # "–¥–æ–¥–∞—Ç–∏ —ñ—â–µ 1-–∏–Ω phone –¥–æ —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É"
                        book.add_phone()

                    case "contact-phone-remove":
                        # "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ phone",
                        book.remove_phone()

                    case "contact-email-add":
                        # "–¥–æ–¥–∞—Ç–∏ —ñ—â–µ 1-–∏–Ω email –¥–æ —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É"
                        book.add_email()

                    case "contact-email-remove":
                        # "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ email",
                        book.remove_email()

                    case "contact-phone-edit":
                        # "—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è phone —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É"
                        book.edit_phone()

                    case "contact-email-edit":
                        # '—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è email —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É'
                        book.edit_email()

                    case "contact-birthday-edit":
                        # '—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è birthday —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É'
                        book.edit_birthday()

                    case "contact-remove":
                        # "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É"
                        book.del_contact()

                    case "display-birthdays":
                        # "–≤–∏–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤, —É —è–∫–∏—Ö –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤ –≤—ñ–¥ –ø–æ—Ç–æ—á–Ω–æ—ó –¥–∞—Ç–∏"
                        book.show_contacts_birthdays()

                    case "note-add":
                        # "–∑–±–µ—Ä—ñ–≥–∞—î –Ω–æ—Ç–∞—Ç–∫—É –∑–∞ —ñ–º–µ–Ω–µ–º –∞–≤—Ç–æ—Ä–∞",
                        note.add_new_note()

                    case "note-find":
                        # "–∑–¥—ñ–π—Å–Ω—é—î –ø–æ—à—É–∫ –Ω–æ—Ç–∞—Ç–∫–∏ —Å–µ—Ä–µ–¥ —ñ—Å–Ω—É—é—á–∏—Ö –Ω–æ—Ç–∞—Ç–∫—ñ–≤"
                        note.find_author()

                    case "note-show-all":
                        # "–ø–æ–∫–∞–∑—É—î –≤—Å—ñ —ñ—Å–Ω—É—é—á—ñ –Ω–æ—Ç–∞—Ç–∫–∏"
                        note.note_show_all()

                    case "note-edit":
                        # "—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏"
                        note.note_edit()

                    case "note-remove":
                        # "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏"
                        note.note_remove()

                    case "tag-add":
                        #  "–¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–µ–≥—ñ–≤ –¥–æ —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏"
                        note.tag_add()

                    case "tag-edit":
                        #  "—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ç–µ–≥—ñ–≤ —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏"
                        note.tag_edit()

                    case "tag-remove":
                        #  "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–µ–≥—ñ–≤ –∑ —ñ—Å–Ω—É—é—á–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏"
                        note.tag_remove()

                    case "tag-find-sort":
                        #  "–ø–æ—à—É–∫ —Ç–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –Ω–æ—Ç–∞—Ç–æ–∫ –∑–∞ —Ç–µ–≥–∞–º–∏"
                        note.tag_find_and_sort()

                    case "file-sort":
                        #  "—Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ —É –∑–∞–∑–Ω–∞—á–µ–Ω—ñ–π –ø–∞–ø—Ü—ñ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏ (–∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, –¥–æ–∫—É–º–µ–Ω—Ç–∏, –≤—ñ–¥–µ–æ —Ç–∞ —ñ–Ω.)."
                        executing_command(user_input.lower())

                    case "file-extension-add":
                        #  "–¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è"
                        executing_command(user_input.lower())

                    case "file-extension-remove":
                        #  "–≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è —ñ–∑ —Å–ø–∏—Å–∫—É –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è"
                        executing_command(user_input.lower())

                    case "quit" | "exit" | "q":
                        print("Good bye!\n")

                        serialization = AddressBook()
                        serialization.save_to_file(file_name, book)
                        note_serialization = NoteBook()
                        note_serialization.note_save_to_file(note_name, note)
                        break

                    case _:
                        error_messages = [
                            "Oh! You seem to have introduced the wrong command. Please try again!",
                            "Oops! This is not like the right command. Let's try again",
                            "Error: The command is not recognized. Try again.",
                            "üòÆ Hmm, I don't understand this command. Let's try something else."
                        ]
                        print(random.choice(error_messages))
                        if exit_flag:
                            timer_thread.cancel()
                            break
                            
            else:
                user_input = prompt(
                    random.choice(HI_COMMANDS_RU),
                    completer=COMMAND_EXPLAIN_RU,
                    pre_run=pre_run,
                    style=STYLE,
                )
                if user_input == "cli":
                    print(available_commands())

                if user_input == "–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞":
                    # '—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç —Å –∏–º–µ–Ω–µ–º, –∞–¥—Ä–µ—Å–æ–º, –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞, email –∏ –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –∫–Ω–∏–≥–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤'
                    book.add_contacts()

                if user_input == "–ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞":
                    # '–æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å—Ä–µ–¥–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∫–Ω–∏–≥–∏'
                    book.search_contact()

                if user_input == "–ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã":
                    # "–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ –∫–Ω–∏–≥–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"
                    book.show_all_contacts()

                if user_input == "–¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –∫ –∫–æ–Ω—Ç–∞–∫—Ç—É":
                    # "–¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ 1-–∏–Ω —Ç–µ–ª–µ—Ñ–æ–Ω –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∫–æ–Ω—Ç–∞–∫—Ç—É"
                    book.add_phone()

                if user_input == "—É–¥–∞–ª–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω —É –∫–æ–Ω—Ç–∞–∫—Ç–∞":
                    # "—É–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
                    book.remove_phone()

                if user_input == "–¥–æ–±–∞–≤–∏—Ç—å email –∫ –∫–æ–Ω—Ç–∞–∫—Ç—É":
                    # "–¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ 1-–∏–Ω email –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∫–æ–Ω—Ç–∞–∫—Ç—É"
                    book.add_email()

                if user_input == "—É–¥–∞–ª–∏—Ç—å email —É –∫–æ–Ω—Ç–∞–∫—Ç–∞":
                    # "—É–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ email",
                    book.remove_email()

                if user_input == "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –∫–æ–Ω—Ç–∞–∫—Ç–∞":
                    # "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞"
                    book.edit_phone()

                if user_input == "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å email –∫–æ–Ω—Ç–∞–∫—Ç–∞":
                    # '—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ email —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞'
                    book.edit_email()

                if user_input == "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞":
                    # '—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞'
                    book.edit_birthday()

                if user_input == "—É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç":
                    # "—É–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞"
                    book.del_contact()

                if user_input == "–≤—ã–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤, —É –∫–æ—Ç–æ—Ä—ã—Ö –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω—É—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤ –≤—ñ–¥ –ø–æ—Ç–æ—á–Ω–æ—ó –¥–∞—Ç–∏":
                    # "–≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤, —É –∫–æ—Ç–æ—Ä—ã—Ö –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã"
                    book.show_contacts_birthdays()

                if user_input == "—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É —Å –∏–º–µ–Ω–µ–º –∞–≤—Ç–æ—Ä–∞":
                    # "—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–º–µ—Ç–∫—É —Å –∏–º–µ–Ω–µ–º –∞–≤—Ç–æ—Ä–∞",
                    note.add_new_note()

                if user_input == "–ø–æ–∏—Å–∫ –∑–∞–º–µ—Ç–∫–∏":
                    # "–æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –ø–æ–∏—Å–∫ –∑–∞–º–µ—Ç–∫–∏ —Å—Ä–µ–¥–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–º–µ—Ç–æ–∫"
                    note.find_author()

                if user_input == "–ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏":
                    # "–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–º–µ—Ç–∫–∏"
                    note.note_show_all()

                if user_input == "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–º–µ—Ç–∫—É":
                    # "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–º–µ—Ç–∫–∏"
                    note.note_edit()

                if user_input == "—É–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É":
                    # "—É–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–º–µ—Ç–∫–∏"
                    note.note_remove()

                if user_input == "–¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥ –∫ –∑–∞–º–µ—Ç–∫–µ":
                    #  "–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–æ–≤ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–º–µ—Ç–∫–µ"
                    note.tag_add()

                if user_input == "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–≥–∏ –∑–∞–º–µ—Ç–∫–∏":
                    #  "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–≥–æ–≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–º–µ—Ç–∫–∏"
                    note.tag_edit()

                if user_input == "—É–¥–∞–ª–∏—Ç—å —Ç–µ–≥–∏ –∏–∑ –∑–∞–º–µ—Ç–∫–∏":
                    #  "—É–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–≥–æ–≤ –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–º–µ—Ç–∫–∏"
                    note.tag_remove()

                if user_input == "–ø–æ–∏—Å–∫ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–º–µ—Ç–æ–∫ –ø–æ —Ç–µ–≥–∞–º":
                    #  "–ø–æ–∏—Å–∫ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–º–µ—Ç–æ–∫ –ø–æ —Ç–µ–≥–∞–º"
                    note.tag_find_and_sort()

                if user_input == "—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –¥–æ–∫—É–º–µ–Ω—Ç—ã, –≤–∏–¥–µ–æ –∏ —Ç. –¥.)":
                    #  "—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –¥–æ–∫—É–º–µ–Ω—Ç—ã, –≤–∏–¥–µ–æ –∏ —Ç. –¥.)"
                    executing_command(user_input.lower())

                if user_input == "–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏":
                    #  "–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏"
                    executing_command(user_input.lower())

                if user_input == "—É–¥–∞–ª–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏":
                    #  "—É–¥–∞–ª–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏"
                    executing_command(user_input.lower())

                if user_input == "–≤—ã—Ö–æ–¥" | "–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ" | "q":
                    print("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!\n")

                    serialization = AddressBook()
                    serialization.save_to_file(file_name, book)
                    note_serialization = NoteBook()
                    note_serialization.note_save_to_file(note_name, note)
                    break

                if not user_input:
                    error_messages = [
                        "–û–π! –ü–æ—Ö–æ–∂–µ, –≤—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!",
                        "–£–ø—Å! –≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑",
                        "–û—à–∏–±–∫–∞: –ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
                        "üòÆ –•–º–º, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º —á—Ç–æ-—Ç–æ –µ—â–µ.,"
                    ]
                    print(random.choice(error_messages))


    except Exception as ex:
        print("Unnexpected error!\n")

        serialization = AddressBook()
        serialization.save_to_file(file_name, book)
        note_serialization = NoteBook()
        note_serialization.note_save_to_file(note_name, note)

    except KeyboardInterrupt:
        print("KeyBoard interrupt error, EXITING!\n")

        serialization = AddressBook()
        serialization.save_to_file(file_name, book)
        note_serialization = NoteBook()
        note_serialization.note_save_to_file(note_name, note)


if __name__ == "__main__":
    asyncio.run(main())
